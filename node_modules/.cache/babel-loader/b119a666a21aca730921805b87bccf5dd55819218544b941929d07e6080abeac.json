{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useLoadingState = (dependencies = [], timeout = 5000) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    let mounted = true;\n    const checkDependencies = async () => {\n      try {\n        // If no dependencies, just wait for a minimal time\n        if (dependencies.length === 0) {\n          await new Promise(resolve => setTimeout(resolve, 100));\n          if (mounted) {\n            setIsLoading(false);\n          }\n          return;\n        }\n\n        // Check if all dependencies are resolved\n        const results = await Promise.allSettled(dependencies);\n        const successful = results.filter(result => result.status === 'fulfilled').length;\n        const progressPercent = successful / dependencies.length * 100;\n        if (mounted) {\n          setProgress(progressPercent);\n          if (successful === dependencies.length) {\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.warn('Loading check failed:', error);\n        if (mounted) {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    // Set a timeout to prevent infinite loading\n    const timeoutId = setTimeout(() => {\n      if (mounted) {\n        setIsLoading(false);\n      }\n    }, timeout);\n    checkDependencies();\n    return () => {\n      mounted = false;\n      clearTimeout(timeoutId);\n    };\n  }, [dependencies, timeout]);\n  return {\n    isLoading,\n    progress\n  };\n};\n_s(useLoadingState, \"7Tu1FLaiJMfRGh4tkUqno3L8DdM=\");\nexport const useImageLoading = (imageUrls = []) => {\n  _s2();\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedCount, setLoadedCount] = useState(0);\n  useEffect(() => {\n    if (imageUrls.length === 0) {\n      setIsLoading(false);\n      return;\n    }\n    let mounted = true;\n    let loaded = 0;\n    const checkImageLoad = () => {\n      loaded++;\n      if (mounted) {\n        setLoadedCount(loaded);\n        if (loaded >= imageUrls.length) {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    // Preload images\n    imageUrls.forEach(url => {\n      const img = new Image();\n      img.onload = checkImageLoad;\n      img.onerror = checkImageLoad; // Continue even if image fails\n      img.src = url;\n    });\n\n    // Fallback timeout\n    const timeoutId = setTimeout(() => {\n      if (mounted) {\n        setIsLoading(false);\n      }\n    }, 3000);\n    return () => {\n      mounted = false;\n      clearTimeout(timeoutId);\n    };\n  }, [imageUrls]);\n  return {\n    isLoading,\n    loadedCount,\n    totalImages: imageUrls.length\n  };\n};\n_s2(useImageLoading, \"BMlJB2FLc1MXWoUOBEt7/KIbhA8=\");\nexport const usePageLoading = () => {\n  _s3();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const handleLoad = () => {\n      setIsLoading(false);\n    };\n    if (document.readyState === 'complete') {\n      setIsLoading(false);\n    } else {\n      window.addEventListener('load', handleLoad);\n      return () => window.removeEventListener('load', handleLoad);\n    }\n  }, []);\n  return {\n    isLoading\n  };\n};\n_s3(usePageLoading, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");","map":{"version":3,"names":["useState","useEffect","useLoadingState","dependencies","timeout","_s","isLoading","setIsLoading","progress","setProgress","mounted","checkDependencies","length","Promise","resolve","setTimeout","results","allSettled","successful","filter","result","status","progressPercent","error","console","warn","timeoutId","clearTimeout","useImageLoading","imageUrls","_s2","loadedCount","setLoadedCount","loaded","checkImageLoad","forEach","url","img","Image","onload","onerror","src","totalImages","usePageLoading","_s3","handleLoad","document","readyState","window","addEventListener","removeEventListener"],"sources":["C:/Users/Loai/pmi-it-website/src/hooks/useLoadingState.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useLoadingState = (dependencies = [], timeout = 5000) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const checkDependencies = async () => {\r\n      try {\r\n        // If no dependencies, just wait for a minimal time\r\n        if (dependencies.length === 0) {\r\n          await new Promise(resolve => setTimeout(resolve, 100));\r\n          if (mounted) {\r\n            setIsLoading(false);\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Check if all dependencies are resolved\r\n        const results = await Promise.allSettled(dependencies);\r\n        const successful = results.filter(result => result.status === 'fulfilled').length;\r\n        const progressPercent = (successful / dependencies.length) * 100;\r\n        \r\n        if (mounted) {\r\n          setProgress(progressPercent);\r\n          \r\n          if (successful === dependencies.length) {\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn('Loading check failed:', error);\r\n        if (mounted) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Set a timeout to prevent infinite loading\r\n    const timeoutId = setTimeout(() => {\r\n      if (mounted) {\r\n        setIsLoading(false);\r\n      }\r\n    }, timeout);\r\n\r\n    checkDependencies();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [dependencies, timeout]);\r\n\r\n  return { isLoading, progress };\r\n};\r\n\r\nexport const useImageLoading = (imageUrls = []) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedCount, setLoadedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (imageUrls.length === 0) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    let mounted = true;\r\n    let loaded = 0;\r\n\r\n    const checkImageLoad = () => {\r\n      loaded++;\r\n      if (mounted) {\r\n        setLoadedCount(loaded);\r\n        if (loaded >= imageUrls.length) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Preload images\r\n    imageUrls.forEach(url => {\r\n      const img = new Image();\r\n      img.onload = checkImageLoad;\r\n      img.onerror = checkImageLoad; // Continue even if image fails\r\n      img.src = url;\r\n    });\r\n\r\n    // Fallback timeout\r\n    const timeoutId = setTimeout(() => {\r\n      if (mounted) {\r\n        setIsLoading(false);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => {\r\n      mounted = false;\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [imageUrls]);\r\n\r\n  return { isLoading, loadedCount, totalImages: imageUrls.length };\r\n};\r\n\r\nexport const usePageLoading = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handleLoad = () => {\r\n      setIsLoading(false);\r\n    };\r\n\r\n    if (document.readyState === 'complete') {\r\n      setIsLoading(false);\r\n    } else {\r\n      window.addEventListener('load', handleLoad);\r\n      return () => window.removeEventListener('load', handleLoad);\r\n    }\r\n  }, []);\r\n\r\n  return { isLoading };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}